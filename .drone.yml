kind: pipeline
type: kubernetes
name: default

volumes:
- name: docker-socket
  host:
    path: /var/run/
- name: docker-config
  host:
    path: /home/chris/.docker/

docker: &docker
  image: docker:dind
  volumes:
  - name: docker-socket
    path: /var/run/
  - name: docker-config
    path: /root/.docker/

environment:
  REGISTRY: registry.home.theguidrys.us
  IMAGE_NAME: 44stonypoint/skim
  UNIQUE_TAG: "${DRONE_COMMIT_BRANCH}-${DRONE_BUILD_NUMBER}"

steps:

- name: prime
  <<: *docker
  failure: ignore
  commands:
  - docker pull $REGISTRY/$IMAGE_NAME:latest

- name: build
  <<: *docker
  commands:
  - docker build --pull -t $IMAGE_NAME:$UNIQUE_TAG .

- name: test
  <<: *docker
  commands:
  - docker run --rm $IMAGE_NAME:$UNIQUE_TAG pytest

- name: publish
  <<: *docker
  commands:
  - PUBLISHED_TAG=`date -u +'%Y%m%d-%H%M%S'`
  - docker tag $IMAGE_NAME:$UNIQUE_TAG $REGISTRY/$IMAGE_NAME:$PUBLISHED_TAG
  - docker tag $IMAGE_NAME:$UNIQUE_TAG $REGISTRY/$IMAGE_NAME:latest
  - docker push $REGISTRY/$IMAGE_NAME:$PUBLISHED_TAG
  - docker push $REGISTRY/$IMAGE_NAME:latest
  - docker rmi $REGISTRY/$IMAGE_NAME:$PUBLISHED_TAG
  # we'll leave the :latest so we have better layer cache re-use
  when:
    branch:
    - main

- name: cleanup
  <<: *docker
  when:
    status:
    - success
    - failure
  commands:
  - docker rmi $IMAGE_NAME:$UNIQUE_TAG

- name: notify
  image: registry.home.theguidrys.us/44stonypoint/drone-pushover:main-1
  when:
    status:
    - failure
  environment:
    # compensating for weird behavior, it was always sending success
    DRONE_BUILD_STATUS: failure
  settings:
    pushover_token:
      from_secret: pushover_token
    pushover_user:
      from_secret: pushover_user
