kind: pipeline
type: kubernetes
name: default

volumes:
- name: docker-socket
  host:
    path: /var/run/
- name: docker-config
  host:
    path: /home/chris/.docker/

docker: &docker
  image: docker:dind
  volumes:
  - name: docker-socket
    path: /var/run/
  - name: docker-config
    path: /root/.docker/

environment:
  REGISTRY: registry.home.theguidrys.us
  IMAGE_NAME: 44stonypoint/skim
  IMAGE_TAG: "${DRONE_COMMIT_BRANCH}-${DRONE_BUILD_NUMBER}-${DRONE_COMMIT_SHA:0:8}"

steps:

- name: build
  <<: *docker
  environment:
    DOCKER_BUILDKIT: "1"
  commands:
  - |
    docker build \
      --pull \
      --build-arg BUILDKIT_INLINE_CACHE=1 \
      --cache-from $REGISTRY/$IMAGE_NAME:latest \
      -t $IMAGE_NAME:$IMAGE_TAG \
      .

- name: test
  <<: *docker
  commands:
  - |
    docker run \
      -d \
      -e POSTGRES_DB=skim \
      -e POSTGRES_USER=skim \
      -e POSTGRES_PASSWORD=skim-password \
      --tmpfs /var/lib/postgresql/data \
      --name postgres-$IMAGE_TAG \
      postgres:14.2
  - |
    docker run \
      --rm \
      --link postgres-$IMAGE_TAG:database \
      -e DB_HOST=database \
      -e DB_USER=skim \
      -e DB_PASSWORD=skim-password \
      -e DB_NAME=skim \
      -e OTEL_EXPORTER_OTLP_ENDPOINT=http://collector.home.theguidrys.us:4317 \
      -e OTEL_EXPORTER_OTLP_INSECURE=true \
      --entrypoint=/usr/local/bin/pytest \
      $IMAGE_NAME:$IMAGE_TAG \
       --export-traces

- name: publish
  <<: *docker
  commands:
  - docker tag $IMAGE_NAME:$IMAGE_TAG $REGISTRY/$IMAGE_NAME:$IMAGE_TAG
  - docker tag $IMAGE_NAME:$IMAGE_TAG $REGISTRY/$IMAGE_NAME:latest
  - docker push $REGISTRY/$IMAGE_NAME:$IMAGE_TAG
  - docker push $REGISTRY/$IMAGE_NAME:latest
  - docker rmi $REGISTRY/$IMAGE_NAME:$IMAGE_TAG
  # we'll leave the :latest so we have better layer cache re-use
  when:
    branch:
    - main

- name: deploy
  image: registry.home.theguidrys.us/44stonypoint/k8s-deploy
  pull: always
  commands:
  - /44stonypoint/k8s/deploy skim $REGISTRY/$IMAGE_NAME:latest=$REGISTRY/$IMAGE_NAME:$IMAGE_TAG
  when:
    branch:
    - main

- name: cleanup
  <<: *docker
  when:
    status:
    - success
    - failure
  commands:
  - docker rm -f postgres-$IMAGE_TAG
  - docker rmi $IMAGE_NAME:$IMAGE_TAG

- name: notify
  image: registry.home.theguidrys.us/44stonypoint/drone-pushover:20211105-015941
  when:
    status:
    - failure
  environment:
    # compensating for weird behavior, it was always sending success
    DRONE_BUILD_STATUS: failure
  settings:
    pushover_token:
      from_secret: pushover_token
    pushover_user:
      from_secret: pushover_user
